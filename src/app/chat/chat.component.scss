:host {
  ::ng-deep .p-inputgroup {
    justify-content: center;
  }

  button.citation-button {
    &:last-child {
      animation: slide-in-from-right 0.5s cubic-bezier(0.785, 0.135, 0.15, 0.86)
        1;
    }

    transform: translate(0, -50%);
    z-index: 2;
    background-color: transparent;
    border: none;
    position: absolute;
    border-radius: 50%;
    color: #1d3556;
    width: 2.5em;
    height: 2.5em;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    margin-left: 0.5em;
    &:hover {
      background-color: #1d355610;
      color: #fff;
    }
  }
  input {
    width: 100%;
    border: 1px solid #ced4da;
    padding: 0.375rem 0.75rem;
  }
  .container {
    height: 100% !important;
    padding: 0.75em;
  }
  .chat-window {
    height: 80%;
    max-width: 100%;
    width: 700px;
    border-radius: 6px;
    overflow-y: scroll;
    border: 1px solid #ced4da2b;
    padding: 1.5em 0em;
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.2);
    background-color: #fff;
  }

  .chat-input {
    height: 7.5%;
    padding: 0em 1.5em;
  }
  .chat-header {
    height: 7.5%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0 !important;
  }
  .chat-messages {
    position: relative;
    height: 80%;
    padding: 0.5em 2em;
    width: 100%;
    display: flex;
    overflow-y: scroll;
    flex-direction: column;
    overflow-x: hidden !important;
    flex-basis: auto;
    &::-webkit-scrollbar {
      width: 10px; /* Adjust the width of the scrollbar */
    }

    &::-webkit-scrollbar-thumb {
      background-color: rgba(
        29,
        44,
        86,
        0.087
      ); /* Color of the scrollbar thumb */
      border-radius: 6px; /* Optional: if you want rounded corners */
      width: 5px !important; /* Width of the scrollbar thumb */
    }
  }
  .pi-search-plus {
    color: #1d3556;
  }

  @keyframes slide-in-from-right {
    from {
      transform: translate(250%, -50%); /* Start from right */
      opacity: 0; /* Start with the button being transparent */
    }
    to {
      transform: translate(0, -50%); /* Start from right */
      opacity: 1; /* Fully visible at the end */
    }
  }

  @keyframes slide-in-from-right-message {
    from {
      transform: translate(50%, 0); /* Start from right */
      opacity: 0; /* Start with the button being transparent */
      scale: 0.75;
    }
    to {
      transform: translate(0, 0); /* Start from right */
      opacity: 1; /* Fully visible at the end */
    }
  }

  @keyframes slide-in-from-left-message {
    from {
      transform: translate(-50%,0 ); /* Start from right */
      opacity: 0; /* Start with the button being transparent */
      scale: 0.75;
    }
    to {
      transform: translate(0, 0); /* Start from right */
      opacity: 1; /* Fully visible at the end */
    }
  }
  ///////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////

  .messages {
    margin-top: 30px;
    display: flex;
    flex-direction: column;
    & > div {
      max-width: 60%;
    }
  }
  .message {
    border-radius: 20px;
    padding: 8px 15px;
    margin-top: 5px;
    margin-bottom: 5px;
    display: inline-block;

  }

  .yours .message {
    background-color: #eee;
    position: relative;
  }

  .yours .message.last:before {
    content: "";
    position: absolute;
    z-index: 0;
    bottom: 0;
    left: -7px;
    height: 20px;
    width: 20px;
    background: #eee;
    border-bottom-right-radius: 15px;
  }
  .yours .message.last:after {
    content: "";
    position: absolute;
    z-index: 1;
    bottom: 0;
    left: -10px;
    width: 10px;
    height: 20px;
    background: #ffffff;
    border-bottom-right-radius: 10px;
  }

  .mine {
    align-items: flex-end;
    justify-content: flex-end;
    animation: slide-in-from-right-message 0.75s cubic-bezier(1, 0, 0, 1) 1;
  }
  .yours {
    align-items: center;
    animation: slide-in-from-left-message 0.75s cubic-bezier(1, 0, 0, 1) 1;

  }

  .mine .message {
    color: white;
    background: linear-gradient(to bottom, #00d0ea 0%, #0085d1 100%);
    background-attachment: fixed;
    position: relative;
  }

  .mine .message.last:before {
    content: "";
    position: absolute;
    z-index: 0;
    bottom: 0;
    right: -8px;
    height: 20px;
    width: 20px;
    background: linear-gradient(to bottom, #00d0ea 0%, #0085d1 100%);
    background-attachment: fixed;
    border-bottom-left-radius: 15px;
  }

  .mine .message.last:after {
    content: "";
    position: absolute;
    z-index: 1;
    bottom: 0;
    right: -10px;
    width: 10px;
    height: 20px;
    background: #ffffff;
    border-bottom-left-radius: 10px;
  }

  /*   .typewriter {
    border-right: 3px solid;
    white-space: nowrap;
    overflow: hidden;
    animation: typing 2s steps(40, end), blink-caret 0.75s step-end infinite;

    @keyframes typing {
      from {
        width: 0;
      }
      to {
        width: 100%;
      }
    }

    @keyframes blink-caret {
      50% {
        border-color: transparent;
      }
    }
  } */
  .caret {
    display: inline-block;
    width: 10px;
    height: 1em;
    margin-left: 2px;
    background-color: #000;
    animation: blink-caret 0.75s step-end infinite;
  }

  @keyframes blink-caret {
    50% {
      opacity: 0.5;
    }
  }
}

.masked-overflow {
  /* scroll bar width, for use in mask calculations */
  --scrollbar-width: 8px;

  /* mask fade distance, for use in mask calculations */
  --mask-height: 16px;

  /* If content exceeds height of container, overflow! */
  overflow-y: auto;

  /* Our height limit */
  height: 300px;

  /* Need to make sure container has bottom space,
otherwise content at the bottom is always faded out */
  padding-bottom: var(--mask-height);

  /* Keep some space between content and scrollbar */
  padding-right: 20px;

  /* The CSS mask */

  /* The content mask is a linear gradient from top to bottom */
  --mask-image-content: linear-gradient(
    to bottom,
    transparent,
    black var(--mask-height),
    black calc(100% - var(--mask-height)),
    transparent
  );

  /* Here we scale the content gradient to the width of the container 
minus the scrollbar width. The height is the full container height */
  --mask-size-content: calc(100% - var(--scrollbar-width)) 100%;

  /* The scrollbar mask is a black pixel */
  --mask-image-scrollbar: linear-gradient(black, black);

  /* The width of our black pixel is the width of the scrollbar.
The height is the full container height */
  --mask-size-scrollbar: var(--scrollbar-width) 100%;

  /* Apply the mask image and mask size variables */
  mask-image: var(--mask-image-content), var(--mask-image-scrollbar);
  mask-size: var(--mask-size-content), var(--mask-size-scrollbar);

  /* Position the content gradient in the top left, and the 
scroll gradient in the top right */
  mask-position: 0 0, 100% 0;

  /* We don't repeat our mask images */
  mask-repeat: no-repeat, no-repeat;
}
